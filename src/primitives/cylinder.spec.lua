-- ROBLOX NOTE: no upstream
local JestGlobals = require("@DevPackages/JestGlobals")
local test, expect = JestGlobals.test, JestGlobals.expect

local geom3 = require("../geometries/geom3")
local cylinder = require("./init").cylinder
local comparePolygonsAsPoints = require("../../test/helpers/comparePolygonsAsPoints")
test("cylinder (defaults)", function()
	local obs = cylinder()
	local pts = geom3.toPoints(obs)
	expect(function()
		return geom3.validate(obs)
	end).never.toThrow()
	expect(#pts).toBe(96)
end)
test("cylinder (zero height)", function()
	local obs = cylinder({ height = 0 })
	local pts = geom3.toPoints(obs)
	expect(function()
		return geom3.validate(obs)
	end).never.toThrow()
	expect(#pts).toBe(0)
end)
test("cylinder (zero radius)", function()
	local obs = cylinder({ radius = 0 })
	local pts = geom3.toPoints(obs)
	expect(function()
		return geom3.validate(obs)
	end).never.toThrow()
	expect(#pts).toBe(0)
end)
test("cylinder (options)", function()
	local obs = cylinder({ height = 10, radius = 4, segments = 5 })
	local pts = geom3.toPoints(obs)
	local exp = {
		{ { 0, 0, -5 }, { 1.2360679774997898, 3.804226065180614, -5 }, { 4, 0, -5 } },
		{
			{ 1.2360679774997898, 3.804226065180614, -5 },
			{ 1.2360679774997898, 3.804226065180614, 5 },
			{ 4, 0, 5 },
			{ 4, 0, -5 },
		},
		{ { 0, 0, 5 }, { 4, 0, 5 }, { 1.2360679774997898, 3.804226065180614, 5 } },
		{
			{ 0, 0, -5 },
			{ -3.2360679774997894, 2.351141009169893, -5 },
			{ 1.2360679774997898, 3.804226065180614, -5 },
		},
		{
			{ -3.2360679774997894, 2.351141009169893, -5 },
			{ -3.2360679774997894, 2.351141009169893, 5 },
			{ 1.2360679774997898, 3.804226065180614, 5 },
			{ 1.2360679774997898, 3.804226065180614, -5 },
		},
		{
			{ 0, 0, 5 },
			{ 1.2360679774997898, 3.804226065180614, 5 },
			{ -3.2360679774997894, 2.351141009169893, 5 },
		},
		{
			{ 0, 0, -5 },
			{ -3.23606797749979, -2.351141009169892, -5 },
			{ -3.2360679774997894, 2.351141009169893, -5 },
		},
		{
			{ -3.23606797749979, -2.351141009169892, -5 },
			{ -3.23606797749979, -2.351141009169892, 5 },
			{ -3.2360679774997894, 2.351141009169893, 5 },
			{ -3.2360679774997894, 2.351141009169893, -5 },
		},
		{
			{ 0, 0, 5 },
			{ -3.2360679774997894, 2.351141009169893, 5 },
			{ -3.23606797749979, -2.351141009169892, 5 },
		},
		{
			{ 0, 0, -5 },
			{ 1.236067977499789, -3.8042260651806146, -5 },
			{ -3.23606797749979, -2.351141009169892, -5 },
		},
		{
			{ 1.236067977499789, -3.8042260651806146, -5 },
			{ 1.236067977499789, -3.8042260651806146, 5 },
			{ -3.23606797749979, -2.351141009169892, 5 },
			{ -3.23606797749979, -2.351141009169892, -5 },
		},
		{
			{ 0, 0, 5 },
			{ -3.23606797749979, -2.351141009169892, 5 },
			{ 1.236067977499789, -3.8042260651806146, 5 },
		},
		{ { 0, 0, -5 }, { 4, 0, -5 }, { 1.236067977499789, -3.8042260651806146, -5 } },
		{
			{ 4, 0, -5 },
			{ 4, 0, 5 },
			{ 1.236067977499789, -3.8042260651806146, 5 },
			{ 1.236067977499789, -3.8042260651806146, -5 },
		},
		{ { 0, 0, 5 }, { 1.236067977499789, -3.8042260651806146, 5 }, { 4, 0, 5 } },
	}
	expect(function()
		return geom3.validate(obs)
	end).never.toThrow()
	expect(#pts).toBe(15)
	expect(comparePolygonsAsPoints(pts, exp)).toBe(true) -- test center
	obs = cylinder({ center = { -5, -5, -5 }, segments = 5 })
	pts = geom3.toPoints(obs)
	exp = {
		{ { -5, -5, -6 }, { -4.6909830056250525, -4.048943483704846, -6 }, { -4, -5, -6 } },
		{
			{ -4.6909830056250525, -4.048943483704846, -6 },
			{ -4.6909830056250525, -4.048943483704846, -4 },
			{ -4, -5, -4 },
			{ -4, -5, -6 },
		},
		{ { -5, -5, -4 }, { -4, -5, -4 }, { -4.6909830056250525, -4.048943483704846, -4 } },
		{
			{ -5, -5, -6 },
			{ -5.8090169943749475, -4.412214747707527, -6 },
			{ -4.6909830056250525, -4.048943483704846, -6 },
		},
		{
			{ -5.8090169943749475, -4.412214747707527, -6 },
			{ -5.8090169943749475, -4.412214747707527, -4 },
			{ -4.6909830056250525, -4.048943483704846, -4 },
			{ -4.6909830056250525, -4.048943483704846, -6 },
		},
		{
			{ -5, -5, -4 },
			{ -4.6909830056250525, -4.048943483704846, -4 },
			{ -5.8090169943749475, -4.412214747707527, -4 },
		},
		{
			{ -5, -5, -6 },
			{ -5.8090169943749475, -5.587785252292473, -6 },
			{ -5.8090169943749475, -4.412214747707527, -6 },
		},
		{
			{ -5.8090169943749475, -5.587785252292473, -6 },
			{ -5.8090169943749475, -5.587785252292473, -4 },
			{ -5.8090169943749475, -4.412214747707527, -4 },
			{ -5.8090169943749475, -4.412214747707527, -6 },
		},
		{
			{ -5, -5, -4 },
			{ -5.8090169943749475, -4.412214747707527, -4 },
			{ -5.8090169943749475, -5.587785252292473, -4 },
		},
		{
			{ -5, -5, -6 },
			{ -4.6909830056250525, -5.951056516295154, -6 },
			{ -5.8090169943749475, -5.587785252292473, -6 },
		},
		{
			{ -4.6909830056250525, -5.951056516295154, -6 },
			{ -4.6909830056250525, -5.951056516295154, -4 },
			{ -5.8090169943749475, -5.587785252292473, -4 },
			{ -5.8090169943749475, -5.587785252292473, -6 },
		},
		{
			{ -5, -5, -4 },
			{ -5.8090169943749475, -5.587785252292473, -4 },
			{ -4.6909830056250525, -5.951056516295154, -4 },
		},
		{ { -5, -5, -6 }, { -4, -5, -6 }, { -4.6909830056250525, -5.951056516295154, -6 } },
		{
			{ -4, -5, -6 },
			{ -4, -5, -4 },
			{ -4.6909830056250525, -5.951056516295154, -4 },
			{ -4.6909830056250525, -5.951056516295154, -6 },
		},
		{ { -5, -5, -4 }, { -4.6909830056250525, -5.951056516295154, -4 }, { -4, -5, -4 } },
	}
	expect(function()
		return geom3.validate(obs)
	end).never.toThrow()
	expect(#pts).toBe(15)
	expect(comparePolygonsAsPoints(pts, exp)).toBe(true)
end)
